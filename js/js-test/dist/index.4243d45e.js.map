{"mappings":"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","sources":["js-test/main.js"],"sourcesContent":["/*//산술 연산자(arithmetic operator)\n\nconsole.log(1 + 2)\nconsole.log(5 - 7)\nconsole.log(3 * 4)\nconsole.log(10 / 2)\nconsole.log(7 % 5) //나머지 연산자 % : 나누고 나머지를 출력*/\n\n/*//할당 연산자(assignment operator)\n\nlet a = 2\n// a = a + 1\na += 1\n\nconsole.log(a)*/\n\n/*//비교 연산자(comparison operator)\n\nconst a = 1\nconst b = 3\n\nconsole.log( a === b) //일치연산자\n\nfunction isEqual(x, y) {\n  return x === y\n}\n\nconsole.log(isEqual(1, 2))\nconsole.log(isEqual(2,'2'))\n\nconst a = 13\nconst b = 13\n\nconsole.log(a !== b)\nconsole.log(a <= b)*/\n\n/*//논리 연산자(logical operator)\n\nconst a = 1 ===123\nconst b = 'AB' === 'ABC'\nconst c = false\n\nconsole.log(a)\nconsole.log(b)\nconsole.log(c)\n\nconsole.log('&&: ', a && c)  // and 그리고\nconsole.log('||: ', a || b || c) // or 또는\nconsole.log('!: ', !a) // not 부정*/\n\n/*//삼항 연산자(ternary operator)\n\nconst a = 1 < 2\n\nif (a) {\n  console.log('참')\n} else {\n  console.log('거짓')\n}\n\nconsole.log(a ? '참' : '거짓')*/\n\n\n/*// 조건문 (If statement)\nimport random from './getRandom'\n\nconst a = random()\n\nswitch (a){\n  case 0: \n    console.log('a is 0')\n    break\n  case 2:\n    console.log('a is 2')\n    break\n  case 4:\n    console.log('a is 4')\n    break\n  default:\n    console.log('rest...')\n}\n\nif(a === 0) {\n  console.log('a is 0')\n} else if( a === 2 ){\n  console.log('a is 2')\n} else if( a === 4 ){\n  console.log('a is 4')\n} \nelse {\n  console.log('rest...')\n} */\n\n\n// 반복문 (For statement)\n// for (시작조건; 종료조건; 변화조건) {}\n\n// const ulEl = document.querySelector('ul')\n\n// for (let i = 0; i < 10; i+= 1){\n//   const li = document.createElement('li')\n//   li.textContent = `행-${i + 1}`\n//   if((i+1) % 2 === 0){\n//     li.addEventListener('click', function (){\n//       console.log(li.textContent)\n//     })\n//   }\n//   ulEl.appendChild(li)\n// }\n\n/*//변수 유효범위(Variable Scope)\n//var, let, const\n\nfunction scope() {\n  if (true){\n    const a = 123\n    console.log(a) //const, let 블록레벨의 유효범위를 가짐\n  }\n}\nscope()*/\n\n\n//형 변환(Type convesion)\n/*const a = 1\nconst b = '1'\n\nconsole.log(a == b)*/\n\n//Truthy(참 같은 값)\n// true, {}, [], 1, 2, 'false', -12, '3.14' ...\n\n//Falsy(거짓 같은 값)\n// false, '', null, undefined, 0, -0, NaN\n\n/*if ('false') {\n  console.log(123)\n}*/\n\n// 함수\n\n/*function sum(x, y) { //매개변수\n  if (x < 2) {\n    return 123\n  } \n  return x + y\n}\n\nconsole.log(sum(1,3))*/\n\n/*function sum(){\n  console.log(arguments)\n  return arguments [0] + arguments\n}\n\nconsole.log(sum(7,3))*/\n\n\n//화살표 함수\n// () => {} vs function () {}\n// 일부내용을 생략해 축약형으로 가능\n\n// const double = function (x, y){\n//   return x * 2\n// }\n// console.log('double: ', double(7))\n\n// const doubleArrow = x =>  ({name: 'Heropy'}) /* = {\n//   return x*2\n// }*/\n// console.log('doubleArrow', doubleArrow(7)) \n\n//즉시실행함수\n//IIFE, Immediately-Invoked Function Expression\n\n/*const a = 7\nfunction double() {\n  console.log(a*2)\n}\ndouble();\n\n(function () {\n  console.log(a * 2)\n}());\n\n(function () {\n  console.log(a * 2)\n})();\n\n//호이스팅(Hosting)\n// 함수 선언부가 유효범위 최상단으로 끌어올려지는 현상\n\nconst b = 8\n\ndouble()\n\nfunction double (){\n  console.log(b * 2)\n}*/\n\n//타이머함수\n//setTimeout(함수, 시간) : 일정 시간 후 함수 실행\n//setInterval(함수, 시간 ): 시간 간격마다 함수 실행\n//clearTimeout() : 설정된 Timeout 함수를 종료\n//clearInterval() : 설정된 Interval 함수를 종료\n\n/*const timer = setTimeout( () => {\n  console.log('Heropy!')\n}, 3000)\n\nconst timer = setInterval( () => {\n  console.log('Heropy!')\n}, 3000)\n\nconst h1El = document.querySelector('h1')\nh1El.addEventListener('click', () => {\n  clearInterval(timer)\n})*/\n\n//콜백(Callback)\n//함수의 인수로 사용되는 함수\n\n/*//setTimeout(함수, 시간)\n\nfunction timeout(Callback) {\n  setTimeout(() => {\n    console.log('Heropy!')\n    Callback()\n  }, 3000)\n}\ntimeout(() => {\n  console.log('Done!')\n})*/\n \n\n// const amy = {\n//   firstName: 'Amy',\n//   lastName: 'Clarke',\n//   getFullName: function (){\n//     return `${this.firstName} ${this.lastName}`\n//   }\n// }\n// console.log(amy.getFullName())\n\n// function user(first, last){\n//   this.firstName = first\n//   this.lastName = last\n//   }\n//   user.prototype.getFullName = function () {\n//     return `${this.firstName} ${this.lastName}`\n//   }\n\n// const heropy = new user('Heropy', 'Park')\n// const amy = new user('Amy', 'Clarke')\n// const neo = new user ('Neo', 'smith')\n\n// console.log(heropy.getFullName())\n// console.log(amy.getFullName())\n// console.log(neo.getFullName())\n\n// const sunny = {\n//   name: 'sunkyu',\n//   age : 27,\n// }\n// sunny.haircolor='black';\n// sunny['hobby'] = 'game';\n// delete sunny.name;\n// console.log(sunny)\n\n//this\n// 일반(normal) 함수는 호출 위치에서 따라 this 정의!\n//  화살표(Arrow) 함수는 자신이 선언된 함수범위에서 this 정의!\n\n// const heropy={\n//   name: 'Heropy',\n//   normal: function () {\n//     console.log(this.name)\n//   },\n//   arrow: () => {\n//     console.log(this.name)\n//   }\n// }\n// heropy.normal()\n// heropy.arrow()\n\n// const amy = {\n//   name: 'Amy',\n//   normal: heropy.normal,\n//   arrow: heropy.arrow\n// }\n\n// amy.normal()\n// amy.arrow()\n // 파스칼 케이스, 생성자 함수\n// function User(name) {\n//   this.name = name\n// }\n// User.prototype.normal = function () {\n//   console.log(this.name)\n// }\n// User.prototype.arrow = () => {\n//   console.log(this.name)\n// }\n\n// const heropy = new User('Heropy')\n\n// heropy.normal()\n// heropy.arrow() \n\n// const timer = {\n//   name: 'Heropy!!',\n//   timeout : function () {\n//     setTimeout(() => {\n//       console.log(this.name)\n//     }, 2000)\n//   }\n// }\n// timer.timeout()\n\n// const sunny={\n//   name: \"sunny\",\n//   age : 30\n// };\n\n// for(b in sunny){  \n//   console.log(b)\n// }\n\n// function user(first, last){\n//   this.firstName = first\n//   this.lastName = last\n//   }\n//   user.prototype.getFullName = function () {\n//     return `${this.firstName} ${this.lastName}`\n//   }\n\n// class User{\n//   constructor(first,last) {\n//     this.firstName = first\n//     this.lastName = last\n//   }\n//   getFullName() {\n//     return `${this.firstName} ${this.lastName}`\n//   }\n// }\n\n// const heropy = new User('Heropy', 'Park')\n// const amy = new User('Amy', 'Clarke')\n// const neo = new User ('Neo', 'smith')\n\n// console.log(heropy.getFullName())\n\n// class Vehicle {\n//   constructor(name, wheel) {\n//     this.name = name\n//     this.wheel = wheel\n//   }\n// }\n// const myVehicle = new Vehicle('운송수단, 2')\n// console.log(myVehicle)\n\n// class Bicycle extends Vehicle {\n//   constructor(name, wheel) {\n//     super(name, wheel)\n//   }\n// } \n// const myBicycle = new Bicycle('삼천리', 2)\n// const daughtersBicycle = new Bicycle('세발', 3)\n// console.log(myBicycle)\n// console.log(daughtersBicycle)\n\n// class Car extends Vehicle {\n//   constructor(name, wheel, license) {\n//     super(name, wheel)\n//     this.license = license\n//   }\n// }\n// const myCar = new Car('벤츠', 4, true)\n// const daughterscar = new Car('포르쉐', 4, false)\n\n// console.log(myCar)\n// console.log(daughterscar)\n\n// const numbers = [1, 2, 3, 4]\n// const fruits = ['Apple', 'Banana', 'Cherry']\n\n// console.log(numbers[1])\n// console.log(fruits[2]) //[2] indexing(인덱싱)\n\n// const numbers = [1, 2, 3, 4]\n// const fruits  = ['Apple', 'Banana', 'Cherry']\n\n// console.log(numbers.length)\n// console.log([1,23,33].length)\n\n// console.log(numbers.concat(fruits)) //forEach 반복적으로 동작하는 method는 callback\n// fruits.forEach(function (fruit, i){\n//   console.log(fruit, i)\n// })\n\n// const a = fruits.forEach((fruit, i) => {\n//   console.log(`${fruit}-${i}`)\n// })\n// console.log(a)\n\n// const b = fruits.map( (fruit, i) => {\n//   return {\n//     id : i,\n//     name : fruit\n//   }\n// })\n// console.log(b)\n\n// const c = fruits.map( (fruit, i) => ({\n//   id : i,\n//   name : fruit\n// }))\n// console.log(c)\n\n// const d = numbers.map(number =>   number <3)\n// console.log(d)\n\n// const e = numbers.filter(number => number < 3)\n// console.log(e)\n\n// const f = fruits.find(fruit =>/^B/.test(fruit))\n// console.log(f)\n\n// const g = fruits.findIndex(fruit =>  /^C/.test(fruit))\n// console.log(g)\n\n// const h = numbers.includes(3)\n// console.log(h)\n\n// const i = fruits.includes('joon')\n// console.log(i)\n\n// numbers.push(5)\n// console.log(numbers)\n\n// numbers.unshift(0)\n// console.log(numbers)\n\n// numbers.reverse()\n\n// console.log(numbers)\n\n// numbers.splice(2,1, 999)\n// console.log(numbers)\n\n// fruits.splice(10, 0, 'Orange')\n// console.log(fruits)\n\n// const userAge = {\n//   name: 'joon',\n//   age:99\n// }\n// const userEmail = {\n//   name: 'joon',\n//   email: 'jjuny4720@naver.com'\n// }\n\n// const target = Object.assign({}, userAge, userEmail)\n// console.log(target)\n// console.log(userAge)\n// console.log(target == userAge)\n\n// const a = { k : 123}\n// const b = { k : 123}\n// console.log(a == b)\n\n// const user = {\n//   name: 'joon',\n//   age : 99,\n//   email : 'jjuny4720@naver.com',\n//   address : 'USA'\n// }\n\n// // const keys = Object.keys(user)\n// // console.log(keys)\n// // //['name','age','email']\n\n// // console.log(user['email'])\n\n// // const values = keys.map(key => user[key])\n// // console.log(values)\n// const {name: jun, age, email, address = 'Korea'} = user\n// // E.g , user.address\n\n// console.log(`사용자의 이름은 ${jun}입니다.`)\n// console.log(`${jun}의 나이는 ${age}세입니다.`)\n// console.log(address)\n\n// const fruits = ['Apple', 'Banana', 'Cherry']\n// const [ , ,b] = fruits\n// console.log(b)\n\nconst fruits = ['Apple', 'Banana', 'Cherry', 'Orange']\nconsole.log(fruits)\nconsole.log(...fruits)\n// console. log('Apple', 'Banana, 'Cherry')\n\nconst toObject = (a, b, ...c) => ({ a, b, c })\nconsole.log(toObject(...fruits))"],"names":[],"version":3,"file":"index.4243d45e.js.map","sourceRoot":"/__parcel_source_root/"}