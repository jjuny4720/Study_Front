/* 속성
박스 모델(여백), 글꼴(두께, 종류), 문자, 
배경(이미지, 색상), 배치(원하는 위치), 
플렉스(정렬, 수평정렬), 전환(요소의 전,후 상태 애니메이션), 
변환(회전하거나 이동시키는것/2D,3D), 띄움(요소를 띄우는 것/사진주변에 문자가 흐르는 것), 
애니메이션(복잡한 애니메이션) , 그리드(행과 열의 구조를 가지는것, 레이아웃),
다단(여러가지 단으로 구성하는것) , 필터(요소를 블러처리, 흑백효과 등을 주는 것) */
body{
  height: 5000px;
  padding: 100px;
}
/* div{
  width: auto;
  height: auto;
  background-color: orange;
} */
span{/* 인라인요소 : 글자를 제어하는 요소이기 때문에 높이, 넓이를 조절 할수 없음 */
  width: 100px;
  height: 100px;
  background-color: orange;
}
/* width /height
요소의 가로/세로 너비
auto(기본값:요소에 이미 들어있는 속성의 값) : 브라우저가 너비를 계산 
단위 : px, em, vw등 단위로 지정

max-width, max-height
요소가 커질 수 있는 최대 가로/세로 너비
none : 최대 너비 제한 없음
단위 : px, em, vw 등 단위로 지정

min-width, min-height
요소가 작아질 수 있는 최소 가로/세로 너비
0 : 최소 너비 제한 없음
단위 : px,em,vw등 단위로 지정

단위
px : 픽셀
% : 상대적 백분율
em : 요소의 글꼴 크기
rem : 루트(html) 요소의 글꼴 크기
vw : 뷰포트 가로 너비의 백분율
vh : 뷰포트 세로 너비의 백분율

margin : 요소의 외부 여백(공간)을 지정하는 단축 속성
0 : 외부 여백 없음
auto : 브라우저가 여백을 계산
단위 : px, em, vw등 단위로 지정
% : 부모 요소의 가로 너비에 대한 비율로 지정
margin : top, right, bottom, left;
margin : top, bottom / left, right
margin : top /left,right / bottom;

padding : 요소의 내부 여백을 지정하는 단축 속성(요소의 크기가 커져요!)
0 : 내부 여백 없음
단위 : px, em, vw 등 단위로 지정
% : 부모 요소의 가로 너비에 대한 비율로 지정

border: 선-두께 선-종류 선-색상; 
border: border-width border-style border-color

border-width: 요소 테두리 선의 두께
단위 : px,em,%등 단위로 지정

border-style : 요소 테두리 선의 종류
none : 선없음
solid :  실선(일반 선)
dotted : 점선
dashed : 파선
double : 두 줄 선

border-color : 요소 테두리 선의 색상을 지정하는 단축 속성
black : 기본속성
색상 : 선의 색상
transparent : 투명

border-방향 : 요소의 테두리 선을 지정하는 기타 속성들
border-방향-속성

border-radius : 요소의 모서리를 둥글게 깎음
0 : 둥글게 없음
단위 : px, em, vw 등 단위로 지정*/

.div2{
  width: 100px;
  height: 100px;
  background-color: orange;
  margin: 20px;
  border-radius: 20px;
}
.container{

}

.container .item{
  width: 100px;
  height: 100px;
  background-color: orange;
}
.container .item:first-child{
  border: 4px solid  red;
  padding: 30px; 
  box-sizing: border-box;
}
/* box-sizing : 요소의 크기 계산 기준을 지정
 content-box : 요소의 내용으로 크기 계산
 border-box : 요소의 내용 + padding + border로 크기 계산
 
 overflow : 요소의 크기 이상으로 내용이 넘쳤을 때 , 보여짐을 제어하는 단축 속성
 visible : 넘친 내용을 그대로 보여줌
 hidden : 넘친 내용을 잘라냄
 auto : 넘친 내용이 있는 경우에만 잘라내고 스크롤바 생성
 overflow-x
 overflow-y
 요소의 크기 잇아응로 내용이 넘쳤을때, 보여짐을 제어하는 개별 속성들
 
 display : 요소의 화면 출력 특성
 (각 요소에 이미 지정되어 있는 값)
 block : 상자 요소
 inline : 글자 요소
 inline-block : 글자 + 상자 요소
 (따로 지정해서 사용하는 값)
 flex : 플렉스 박스
 grid : 그리드
 none : 보여짐 특성 없음
 기타 : table, table-row, table-cell 등*/

 .span1{
   display : none;
   width: 120px;
   height: 30px;
   background-color: royalblue;
   color: white;
 }

.parent{
  width: 200px;
  height: 150px;
  padding: 30px;
  margin: 20px;
  background-color: royalblue;
  overflow: auto;
}
.child{
  width: 300px;
  height: 100px;
  background-color: orange;
  opacity: .5;
}
/* opacity : 요소의 투명도 설정
1: 불투명
0~1 까지의 소수점 숫자*/

h1{
  font-size: 24px;
  font-weight: 700;
  font-style: italic;
}

/* font-style : 글자의 기울기
normal : 기울기 없음
italic : 이텔릭체

font-weight 글자의 두께(가중치)
normal, 400 : 기본 두께
bold, 700 : 두껍게
100~900 : 100단위의 숫자 9개, normal과 bold 이외 두께 

font-size : 글자의 크기
16px : 기본 크기
단위 : px, em, rem 등 단위로 지정

line- height : 한 줄의 높이, 행간과 유사(주로 배수로 지정)
숫자 : 요소의 글꼴 크기의 배수로 지정(현재 글꼴 크기가 기준)
단위 : px, em, rem등의 단위로 지정

font-family : 글꼴 서체 지정
font-family : 글꼴1, "글꼴2(띄어쓰기 등 특수문자가 포함된 글꼴 이름은 큰 따옴표로 묶어야 한다.)", ,,, 글꼴계열(필수 작성); 
serif : 바탕체
sans-serif : 고딕체
monospace : 고정너비 글꼴
cursive : 필기체 계열
fantasy : 장식 글꼴 계열*/

.p1{
  font-size: 16px;
  width: 350px;
  padding: 10px;
  border: 1px dashed;
  box-sizing: border-box;
  line-height: 1.4;
}
/* color : 글자의 색상
rgb(0,0,0) : 검정색
색상 : 기타 지정 가능한 색상 

text-align : 문자의 정렬 방식
left : 왼쪽 정렬
right : 오른쪽 정렬
center : 가운데 정렬
justify : 양쪽 정렬

text-decoration : 문자의 장식(선)
none : 장식 없음
underline : 밑줄
line-through : 중앙 선*/
a{
  display:block;
  width:200px;
  height: 100px;
  background-color: orange;
  font-size: 22px;
  color:white;
  text-decoration: none;
  text-align: center;
  line-height: 100px;
}
/* text-indent :  문자 첫 줄의 들여쓰기(음수도 사용 가능[내어쓰기])
0 : 들여쓰기 없음
단위 : px, em, rem등 단위로 지정 */
p{
  font-size: 24px;
  text-indent: 50px;
}
/* background-color : 요소의 배경 색상
transparent : 투명함
색상 : 지정 가능한 색상

background-image : 요소의 배경 이미지 삽입
none : 이미지 없음
url("경로") : 이미지 경로

background-repeat : 요소의 배경 이미지 반복
repeat : 이미지를 수직, 수평 반복
repeat-x : 이미지를 수평 반복
repeat-y : 이미지를 수직 반복
no-repeat : 반복 안함

background-position
0% 0% : 0%~100% 사이 값
1. 방향 : top, bottom, left, right, center 방향
2. 단위 : px, em, rem 등 단위로 지정 x축, y축

background-size : 요소의 배경 이미지 크기
auto : 이미지의 실제 크기
단위 : px, em, rem 등 단위로 지정
cover : 비율을 유지, 요소의 더 넓은 너비에 맞춤
contain : 비율을 유지, 요소의 더 짧은 너비에 맞춤

background-attachment : 요소의 배경 이미지 스크롤 특성
scroll : 이미지가 요소를 따라서 같이 스크롤
fixed : 이미지가 뷰포트에 고정, 스크롤 x*/

.div1 {
  width:200px;
  height: 200px;
  background-color: orange;
  background-image: url("https://w7.pngwing.com/pngs/559/463/png-transparent-pikachu-pokemon-go-the-pokemon-company-pikachu-text-logo-video-game.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
}

/* position : 요소의 위치 지정 기준 [top/bottom/left/right/z-index]
static : 기준 없음
relative : 요소 자신을 기준
absolute : 위치 상 부모 요소를 기준(위치 상 부모 요소를 꼭 확인해야 함)
fixed : 뷰포트를 기준 */
.wrap{
  width: 400px;
  height: 300px;
  background-color: tomato;
  position: relative;
}
.container2{
  width: 300px;
  background-color: royalblue;
  position: relative;
}

.container2 .item2{
  border: 4px dashed red;
  background-color: orange;
}
.container2 .item2:nth-child(1){
  width: 100px;
  height: 100px;
}
.container2 .item2:nth-child(2){
  width: 140px;
  height: 70px;
  bottom: 30px;
  right: 60px;
}
.container2 .item2:nth-child(3){
  width: 70px;
  height: 120px;
}
/* 요소 쌓임 순서(Stack order) : 어떤 요소가 사용자와 더 가깝게 있는지 결정
1. 요소에 position 속성의 값이 있는 경우 위에 쌓임(기본값 static 제외)
2. 1번 조건이 같은 경우, z-index 속성의 숫자 값이 높을 수록 위에 쌓임
3. 1번과 2번 조건까지 같은 경우, HTML의 다음 구조일 수록 위에 쌓임 

z-index : 요소의 쌓임 정도를 지정
auto : 부모 요소와 동일한 쌓임 정도
숫자 : 숫자가 높을 수록 위에 쌓임*/
.container3{
  width:300px;
  background-color: royalblue;
  position: relative;
  /* (위치상의 부모 요소로 바꾸기 위해 사용) */
}
.container3 .item3{
  width: 100px;
  height: 100px;
  border: 4px dashed red;
  background-color: orange;
}
.container3 .item3:nth-child(1){
  position: relative;
}
.container3 .item3:nth-child(2){
  position: absolute;
  top: 50px;
  left: 50px;
}
.container3 .item3:nth-child(3){
  
}
/* 요소의 display가 변경됨
position 속성의 값으로 absolute, fixed 가 지정된 요소는 display속성이 block으로 변경됨 */
.span2{
  width: 100px;
  height: 100px;
  background-color: orange;
  font-size: 40px;
  position:absolute;
}

/* 플렉스(정렬)  
display : flex container의 화면 출력 특성
flex : 블럭 요소와 같이 Flex Container 정의
inline-flex : 인라인 요소와 같이 Flex Container 정의

flex-direction : 주 축을 설정
row : 행 축(좌 -> 우)
row-reverse : 행 축 (우 -> 좌)
column : 열 축(위 -> 아래)
column-reverse : 열 축(아래 -> 위)

flex-wrap : flex items 묶음(줄 바꿈)여부
no wrap : 묶음(줄 바꿈) 없음
wrap : 여러 줄로 묶음

justify-content : 주 축의 정렬 방법
flex-start : flex items를 시작점으로 정렬(기본값)
flex-end : flex items를 끝점으로 정렬
center : flex items를 가운데 정렬

align-content : 교차 축의 여러 줄 정렬 방법
stretch : flex items를 시작점으로 정렬
flex-start : flex items를 시작점으로 정렬
flex-end : flex items를 끝점으로 정렬
center : flex items를 가운데 정렬

align-items : 교차 축의 한줄 정렬 방법(한줄일 때)
stretch : flex items를 교차 축으로 늘림
flex-start : flex items를 각 줄의 시작점으로 정렬
flex-end : flex items를 각 줄의 끝점으로 정렬
center : flex items를 각 줄의 가운데 정렬

order : flex item의 순서
0 : 순서없음
숫자 : 숫자가 작을수록 먼저

flex-grow : flex item의 증가 너비 비율
0 : 증가 비율 없음
숫자 : 증가 비율

flex-shrink : flex item의 감소 너비 비율
1 : flex container 너비에 따라 감소 비율 적용(기본값)
숫자 : 감소 비율

flex-basis : flex item의 공간 배분 전 기본 너비
auto : 요소의 content 너비
단위 : px, em, rem 등 단위로 지정*/

.container4{
  width: 500px;
  height: 300px;
  background-color: royalblue;
  display: flex;
  justify-content: center;
  align-items: center;
}
.container4 .item4{
  width: 100px;
  height: 100px;
  border: 3px dashed red;
  background-color: orange;
  flex-grow: 1;
  flex-basis: 0;
}
.container4 .item4:nth-child(3){
  flex-grow: 2;
}
/* transition : 요소의 전환(시작과 끝)효과를 지정하는 단축 속성
속성명 지속시간(단축형으로 작성할 때, 필수 포함 속성) 타이밍함수 대기시간;

transition-property
all : 모든속성에 적용
속성이름 : 전환 효과를 사용할 속성 이름 명시

transition-duration
0s : 전환 효과 없음
시간 : 지속시간(s)을 지정

transition-timing-function : 전환 효과의 타이밍(Easing)함수를 지정
ease : 느리게 - 빠르게 - 느리게
linear : 일정하게
ease-in : 느리게 - 빠르게
ease-out : 빠르게 - 느리게
ease-in-out : 느리게 - 빠르게 - 느리게

transition-delay : 전환 효과가 몇 초 뒤에 시작할지 대기시간을 지정
0s : 대기시간 없음
시간 : 대기시간(s)을 지정

transform : 요소의 변환 효과
transform : 변환함수1 변환함수2 변환함수3;
transform : 원근법 이동 크기 회전 기울임;

2D변환함수
transform(x,y) : 이동(x축, y축)
transformX(x) : 이동(x축)
translateY(y) : 이동(y축)
scale(x,y) : 크기(x축, y축)
rotate(degree) : 회전(각도)
skewX(x) : 기울임(x축)
skewY(y) : 기울임(y축)

3D변환함수
perspective(n) : 원근법(거리) / [제일 앞에 작성해야함 ex) transform: perspective(500px) rotateX(45deg)]
rotateX(x) : 회전(x축)
rotateY(y) : 회전(y축)

perspective : 하위 요소를 관찰하는 원근 거리를 지정(함수와 달리 부모요소의 중간을 기준으로 감) /부모요소에 작성
단위 : px등 단위로 지정

backface-visibility : 3D 변환으로 회전된 요소의 뒷면 숨김 여부
visible : 뒷면 보임
hidden : 뒷면 숨김*/

.div3{
  width: 100px;
  height: 100px;
  background-color: orange;
  transition: 1s .5s;
}
.div3:active{
  width: 300px;
  background-color: royalblue;
}
.container5{
  width: 100px;
  height: 100px;
  background-color: royalblue;
  perspective: 250px;
}
.container5 .item5{
  width: 100px;
  height: 100px;
  background-color: orange;
  font-size: 60px;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: rotateX(0deg);
  backface-visibility: hidden;
}